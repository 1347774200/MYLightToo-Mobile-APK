name: Simple APK Build

on:
  workflow_dispatch:  # 只允许手动触发
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v3
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: 🔧 Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git unzip openjdk-8-jdk autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev
        python -m pip install --upgrade pip
        pip install buildozer==1.4.0 cython==0.29.33
        
    - name: 📱 Create test app
      run: |
        mkdir -p test_app
        
        # 创建简单的main.py
        cat > test_app/main.py << 'EOF'
from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.button import Button

class SimpleApp(App):
    def build(self):
        layout = BoxLayout(orientation='vertical', padding=20, spacing=10)
        
        title = Label(
            text='文旅多媒体演出控制\n移动端测试版本',
            font_size='18sp',
            size_hint_y=0.4
        )
        
        button = Button(
            text='点击测试',
            size_hint_y=0.3
        )
        button.bind(on_press=self.on_button_click)
        
        self.status = Label(
            text='应用启动成功！',
            size_hint_y=0.3
        )
        
        layout.add_widget(title)
        layout.add_widget(button)
        layout.add_widget(self.status)
        
        return layout
    
    def on_button_click(self, instance):
        self.status.text = 'APK构建和测试成功！'

if __name__ == '__main__':
    SimpleApp().run()
EOF

        # 创建buildozer.spec
        cat > test_app/buildozer.spec << 'EOF'
[app]
title = 文旅多媒体演出控制
package.name = multimediacontroller
package.domain = com.showcontrol
source.dir = .
source.include_exts = py
version = 1.0
requirements = python3,kivy
orientation = portrait
fullscreen = 0

[buildozer]
log_level = 2

# Android
android.permissions = INTERNET
android.api = 28
android.minapi = 21
android.sdk = 28
android.ndk = 21b
android.ndk_api = 21
android.accept_sdk_license = True
android.archs = armeabi-v7a
android.allow_backup = True
EOF

        echo "✅ Created test app files"
        ls -la test_app/
        
    - name: 🔨 Build APK
      working-directory: test_app
      run: |
        echo "🚀 Building APK..."
        
        # 设置环境
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        export PATH=$JAVA_HOME/bin:$PATH
        
        # 显示版本信息
        echo "Java: $(java -version 2>&1 | head -1)"
        echo "Python: $(python --version)"
        echo "Buildozer: $(buildozer --version)"
        
        # 构建
        buildozer android debug
        
    - name: 📤 Upload APK
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: multimedia-controller-apk
        path: test_app/bin/*.apk
        retention-days: 30
        
    - name: 📊 Summary
      run: |
        echo "🎉 Build completed!"
        if [ -f test_app/bin/*.apk ]; then
          echo "✅ APK files created:"
          ls -la test_app/bin/*.apk
          echo "📦 File sizes:"
          du -h test_app/bin/*.apk
        else
          echo "❌ No APK files found"
        fi
