name: APK Build - Buildozer Solution

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install Buildozer and dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install buildozer==1.5.0 cython==0.29.36

        # Install system dependencies for buildozer
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          unzip \
          wget \
          curl \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev \
          libssl-dev \
          python3-setuptools \
          python3-distutils \
          python3-dev \
          libffi-dev \
          libssl-dev

        # Verify installations
        echo "Installed packages:"
        pip list | grep -E "(buildozer|cython)"
        echo "Cython version:"
        cython --version || echo "Cython not found in PATH"

    - name: Create simple app
      run: |
        mkdir -p app_build
        cd app_build

        # Create extremely simple main.py
        echo 'print("Hello from Python on Android!")' > main.py
        echo 'import time' >> main.py
        echo 'time.sleep(1)' >> main.py
        echo 'print("App completed successfully!")' >> main.py

        # Create buildozer.spec with minimal configuration
        buildozer init

        # Modify buildozer.spec for our simple app
        sed -i 's/title = My Application/title = TestApp/' buildozer.spec
        sed -i 's/package.name = myapp/package.name = testapp/' buildozer.spec
        sed -i 's/package.domain = org.example/package.domain = com.test.app/' buildozer.spec
        sed -i 's/source.dir = ./source.dir = ./' buildozer.spec
        sed -i 's/version = 0.1/version = 1.0/' buildozer.spec
        sed -i 's/requirements = python3,kivy/requirements = python3/' buildozer.spec

        echo "Created files:"
        ls -la
        echo "main.py:"
        cat main.py

    - name: Build APK with Buildozer
      working-directory: app_build
      run: |
        echo "Building APK with Buildozer..."
        echo "Environment check:"
        java -version
        python --version
        buildozer --version
        cython --version || echo "Cython not found"

        # Check buildozer.spec
        echo "Buildozer spec content:"
        head -20 buildozer.spec

        # Build APK using buildozer (handles all P4A complexity)
        buildozer android debug

    - name: Check results
      working-directory: app_build
      run: |
        echo "Searching for APK files:"
        find . -name "*.apk" -type f -exec ls -lh {} \; || echo "No APK found"

        # Buildozer creates APK in bin directory
        if [ -d "bin" ]; then
          echo "Bin directory contents:"
          ls -la bin/
        fi

    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-apk
        path: app_build/bin/*.apk
        retention-days: 30

    - name: Summary
      run: |
        cd app_build
        if find . -name "*.apk" -type f | grep -q .; then
          echo "üéâ SUCCESS: APK build completed!"
          find . -name "*.apk" -type f -exec basename {} \;
          echo "üì± Download APK from Artifacts section above"
        else
          echo "‚ùå FAILED: No APK generated"
          exit 1
        fi
