name: APK Build - Real Android SDK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install real Android SDK manually
      run: |
        # Download and install Android SDK manually
        mkdir -p $HOME/android-sdk
        cd $HOME/android-sdk

        # Download command line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip

        # Fix directory structure
        mkdir -p cmdline-tools
        mv cmdline-tools temp
        mkdir -p cmdline-tools/latest
        mv temp/* cmdline-tools/latest/
        rmdir temp

        # Set environment variables
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin

        # Add to GitHub environment
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

        # Accept licenses and install minimal components
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools"
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platforms;android-28"
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "build-tools;28.0.3"

        # Add build-tools to PATH
        echo "$HOME/android-sdk/build-tools/28.0.3" >> $GITHUB_PATH

        echo "Real Android SDK installed successfully"
        echo "Verifying tools:"
        ls -la $HOME/android-sdk/cmdline-tools/latest/bin/
        ls -la $HOME/android-sdk/build-tools/28.0.3/ | head -10

    - name: Install Python packages and dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install python-for-android==2022.9.4 cython==0.29.36

        # Install system dependencies
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          unzip \
          wget \
          curl \
          python3-dev \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev \
          libssl-dev

        # Verify installations
        echo "Installed packages:"
        pip list | grep -E "(python-for-android|cython)"
        echo "Cython version:"
        cython --version || echo "Cython not found in PATH"
        echo "P4A version:"
        p4a --version || echo "P4A not found in PATH"

    - name: Create simple app
      run: |
        mkdir -p app_build
        cd app_build

        # Create extremely simple main.py
        echo 'print("Hello from Python on Android!")' > main.py
        echo 'import time' >> main.py
        echo 'time.sleep(1)' >> main.py
        echo 'print("App completed successfully!")' >> main.py

        echo "Created main.py:"
        cat main.py

    - name: Build APK with P4A
      working-directory: app_build
      run: |
        echo "Building APK with P4A..."
        echo "Environment check:"
        java -version
        python --version
        p4a --version || echo "P4A not found"

        # Test real Android tools
        echo "Testing real Android tools:"
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        which sdkmanager && sdkmanager --version || echo "sdkmanager test failed"
        which adb && adb version || echo "adb test failed"
        find $ANDROID_HOME -name "aidl" -type f || echo "AIDL not found"

        # Set environment variables for P4A
        export ANDROIDAPI="28"
        export NDKAPI="21"

        # Build APK using P4A with service_only bootstrap
        p4a apk --private . --package=com.test.app --name="TestApp" --version=1.0 --bootstrap=service_only --requirements=python3 --arch=armeabi-v7a

    - name: Check results
      working-directory: app_build
      run: |
        echo "Searching for APK files:"
        find . -name "*.apk" -type f -exec ls -lh {} \; || echo "No APK found"

        # P4A creates APK in dist directory
        if [ -d "dist" ]; then
          echo "Dist directory contents:"
          ls -la dist/
        fi

    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-apk
        path: app_build/dist/*.apk
        retention-days: 30

    - name: Summary
      run: |
        cd app_build
        if find . -name "*.apk" -type f | grep -q .; then
          echo "üéâ SUCCESS: APK build completed!"
          find . -name "*.apk" -type f -exec basename {} \;
          echo "üì± Download APK from Artifacts section above"
        else
          echo "‚ùå FAILED: No APK generated"
          echo "Build logs and directory structure:"
          ls -la
          echo "Checking for any build artifacts:"
          find . -type f -name "*" | head -20
        fi
