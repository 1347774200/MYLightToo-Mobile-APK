name: Ultra Simple APK Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git unzip wget curl autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev python3-setuptools python3-distutils

    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install buildozer==1.5.0 cython==0.29.36

    - name: Setup Android SDK
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk/cmdline-tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip -q commandlinetools-linux-8512546_latest.zip
        mv cmdline-tools latest
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/android-sdk/build-tools/29.0.3" >> $GITHUB_PATH
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager platform-tools
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager platforms\;android-29
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager build-tools\;29.0.3
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager ndk\;21.4.7075529

    - name: Create app
      run: |
        mkdir -p app_build
        cd app_build
        python -c "
with open('main.py', 'w') as f:
    f.write('from kivy.app import App\n')
    f.write('from kivy.uix.label import Label\n')
    f.write('\n')
    f.write('class TestApp(App):\n')
    f.write('    def build(self):\n')
    f.write('        return Label(text=\"APK Build Test\", font_size=\"20sp\")\n')
    f.write('\n')
    f.write('TestApp().run()\n')
"
        python -c "
with open('buildozer.spec', 'w') as f:
    f.write('[app]\n')
    f.write('title = Test App\n')
    f.write('package.name = testapp\n')
    f.write('package.domain = com.test.app\n')
    f.write('source.dir = .\n')
    f.write('source.include_exts = py\n')
    f.write('version = 1.0\n')
    f.write('requirements = python3,kivy\n')
    f.write('orientation = portrait\n')
    f.write('\n')
    f.write('[buildozer]\n')
    f.write('log_level = 2\n')
    f.write('\n')
    f.write('android.permissions = INTERNET\n')
    f.write('android.api = 29\n')
    f.write('android.minapi = 21\n')
    f.write('android.sdk = 29\n')
    f.write('android.ndk = 21.4.7075529\n')
    f.write('android.ndk_api = 21\n')
    f.write('android.accept_sdk_license = True\n')
    f.write('android.archs = armeabi-v7a\n')
"
        echo "Files created successfully"
        ls -la
        echo "main.py:"
        cat main.py
        echo "buildozer.spec:"
        cat buildozer.spec

    - name: Build APK
      working-directory: app_build
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export ANDROID_NDK_HOME=$HOME/android-sdk/ndk/21.4.7075529
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/29.0.3:$PATH
        echo "Starting build process..."
        echo "Java version:"
        java -version
        echo "Python version:"
        python --version
        echo "Buildozer version:"
        buildozer --version
        echo "Android SDK:"
        ls -la $ANDROID_HOME/
        rm -rf .buildozer bin
        buildozer android debug

    - name: Check results
      working-directory: app_build
      run: |
        echo "Searching for APK files:"
        find . -name "*.apk" -type f -exec ls -lh {} \; || echo "No APK found"
        if [ -d "bin" ]; then
          echo "Bin directory:"
          ls -la bin/
        fi

    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-apk
        path: app_build/bin/*.apk
        retention-days: 30

    - name: Summary
      run: |
        cd app_build
        if find . -name "*.apk" -type f | grep -q .; then
          echo "SUCCESS: APK build completed"
          find . -name "*.apk" -type f -exec basename {} \;
          echo "Download from Artifacts section"
        else
          echo "FAILED: No APK generated"
          exit 1
        fi
